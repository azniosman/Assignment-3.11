# Custom values for azni-app deployment in azni-mysql
global:
  environment: production

replicaCount: 1

image:
  repository: mysql
  pullPolicy: IfNotPresent
  tag: "5.7"

# MySQL configuration
mysql:
  rootPassword: "password123" # In production, use external secrets management
  database: "azni_db"
  user: "azni_user"
  password: "azni_password" # In production, use external secrets management

# Persistence configuration for MySQL data
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 10Gi
  storageClass: gp2
  annotations: {}

# Environment variables for MySQL - will be replaced with secretKeyRef
env:
  - name: MYSQL_ROOT_PASSWORD
    valueFrom:
      secretKeyRef:
        name: azni-app-mysql-secrets
        key: mysql-root-password
  - name: MYSQL_DATABASE
    valueFrom:
      secretKeyRef:
        name: azni-app-mysql-secrets
        key: mysql-database
  - name: MYSQL_USER
    valueFrom:
      secretKeyRef:
        name: azni-app-mysql-secrets
        key: mysql-user
  - name: MYSQL_PASSWORD
    valueFrom:
      secretKeyRef:
        name: azni-app-mysql-secrets
        key: mysql-password

# Enable network policy for production
networkPolicy:
  enabled: true
  additionalIngressRules:
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - port: 3306
          protocol: TCP

# Enable validation hooks
validationHooks:
  enabled: true

service:
  type: NodePort
  port: 3306
  nodePort: 30307
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9104"

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-2017-01
  hosts:
    - host: mysql.your-domain.com
      paths:
        - path: /mysql
          pathType: Prefix
  tls:
    - secretName: mysql-tls
      hosts:
        - mysql.your-domain.com

resources:
  limits:
    cpu: 500m
    memory: 768Mi
  requests:
    cpu: 250m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Add namespace-specific labels
podLabels:
  environment: production
  namespace: azni-mysql
  component: database

# Add tolerations for CriticalAddonsOnly nodes
tolerations:
  - key: "CriticalAddonsOnly"
    operator: "Exists"
    effect: "NoSchedule"

# Improved MySQL probes with better parameters
livenessProbe:
  exec:
    command:
      - "mysqladmin"
      - "ping"
      - "-h"
      - "localhost"
      - "-u"
      - "root"
      - "-p${MYSQL_ROOT_PASSWORD}"
  initialDelaySeconds: 60
  periodSeconds: 20
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  exec:
    command:
      - "mysqladmin"
      - "ping"
      - "-h"
      - "localhost"
      - "-u"
      - "root"
      - "-p${MYSQL_ROOT_PASSWORD}"
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 2

# Persistent volume for MySQL data
volumes:
  - name: mysql-data
    persistentVolumeClaim:
      claimName: mysql-data-pvc

volumeMounts:
  - name: mysql-data
    mountPath: /var/lib/mysql

# Add affinity rules to avoid scheduling multiple MySQL pods on the same node
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - azni-app
            - key: app.kubernetes.io/component
              operator: In
              values:
                - database
        topologyKey: "kubernetes.io/hostname"
